import React, { LegacyRef, ReactNode } from 'react';
import { StyleProp, ImageStyle, ImageResizeMode, ImageSourcePropType } from 'react-native';
import { OnTap, OnMove } from './types';
import ImageDetail from './ImageDetail';
interface Props {
    source: ImageSourcePropType;
    style?: StyleProp<ImageStyle>;
    resizeMode?: ImageResizeMode;
    isRTL?: boolean;
    renderToHardwareTextureAndroid?: boolean;
    isTranslucent?: boolean;
    swipeToDismiss?: boolean;
    imageBackgroundColor?: string;
    overlayBackgroundColor?: string;
    hideCloseButton?: boolean;
    modalRef?: LegacyRef<ImageDetail>;
    disabled?: boolean;
    modalImageStyle?: ImageStyle;
    modalImageResizeMode?: ImageResizeMode;
    renderHeader?: (close: () => void) => ReactNode;
    renderFooter?: (close: () => void) => ReactNode;
    renderImageComponent?: (params: {
        source: ImageSourcePropType;
        style?: StyleProp<ImageStyle>;
        resizeMode?: ImageResizeMode;
    }) => ReactNode;
    onLongPressOriginImage?: () => void;
    onTap?: (eventParams: OnTap) => void;
    onDoubleTap?: () => void;
    onLongPress?: () => void;
    onOpen?: () => void;
    didOpen?: () => void;
    onMove?: (position: OnMove) => void;
    responderRelease?: (vx?: number, scale?: number) => void;
    willClose?: () => void;
    onClose?: () => void;
}
declare const ImageModal: (props: Props) => React.JSX.Element;
export default ImageModal;
export { ImageDetail };
//# sourceMappingURL=index.d.ts.map